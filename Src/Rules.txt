*******************************************************************
*******************************************************************
*******************************************************************
*******************************************************************
*******************************************************************
                                RFT
*******************************************************************
*******************************************************************
*******************************************************************
*******************************************************************
*******************************************************************
    {                     // RFTV1 - RFTV1 (ESP8266)
    0,          // GPIO00 Button
    0,          // GPIO01 Serial RXD and Optional sensor
    0,          // GPIO02 Only available on newer Sonoff Basic R2 V1
    0,          // GPIO03 Serial TXD and Optional sensor
    GPI8_LEDLNK,          // GPIO04 Optional sensor
    GPI8_BUZZER,                  // GPIO05
                        // GPIO06 (SD_CLK   Flash)
                        // GPIO07 (SD_DATA0 Flash QIO/DIO/DOUT)
                        // GPIO08 (SD_DATA1 Flash QIO/DIO/DOUT)
                        // GPIO09 (SD_DATA2 Flash QIO or ESP8285)
                        // GPIO10 (SD_DATA3 Flash QIO or ESP8285)
                        // GPIO11 (SD_CMD   Flash)
    GPI8_KEY1_INV,          // GPIO12 Red Led and Relay (0 = Off, 1 = On)
    GPI8_RFSEND,      // GPIO13 Green Led (0 = On, 1 = Off) - Link and Power status
    GPI8_RFRECV,          // GPIO14 Optional sensor
    0,                  // GPIO15
    0,                  // GPIO16
    0                   // ADC0 Analog input
  }
*******************************************************************
*******************************************************************
Rule3
on system#Init do if (mem1==0) mem1 0 endif endon
on system#Init do if (mem2==0) mem2 0 endif endon
on system#Init do if (mem3==0) mem3 0 endif endon
on Mqtt#Connected do Publish2 nilinet/sensor/security/rft/v1-0/%topic%/sta/RUL {"Rule1":%mem1%,"Rule2":%mem2%,"Rule3":%mem3%,"Time":%UTCTIME%} endon
Rule3 1
mem3 1
WebServer 0
*******************************************************************
*******************************************************************
    Rul1_1 = '''Rule1
on System#Init do if (mem5==0) mem5 0 endif endon
on System#Init do if (var3==0) var3 0 endif endon
on system#Init do if (mem4==0) mem4 0 endif endon
on system#Init do if (mem16==0) mem16 0 endif endon
on Mqtt#Connected do Publish2 nilinet/sensor/security/rft/v1-0/%topic%/sta/PIR {"PIR":"Boot","PIRCounter":%mem5%,"Time":%UTCTIME%,"PIRTime":%mem16%} endon
on Mqtt#Connected do if (mem4!=0) Publish2 nilinet/sensor/security/rft/v1-0/%topic%/sta/POW {"POW":"ON", "Time":%UTCTIME%} ELSE Publish2 nilinet/sensor/security/rft/v1-0/%topic%/sta/POW {"POW":"OFF", "Time":%UTCTIME%} endif endon
on Mem4#State do if (mem4!=0) Publish2 nilinet/sensor/security/rft/v1-0/%topic%/sta/POW {"POW":"ON", "Time":%UTCTIME%} ELSE Publish2 nilinet/sensor/security/rft/v1-0/%topic%/sta/POW {"POW":"OFF", "Time":%UTCTIME%} endif endon
on Mem5#State do mem16 %UTCTIME% endon
on Mem5#State do Publish2 nilinet/sensor/security/rft/v1-0/%topic%/sta/PIR {"PIR":"Confirm","PIRCounter":%mem5%,"Time":%UTCTIME%,"PIRTime":%mem16%} endon'''
    Rul1_2 = '''Rule1 +
on Button1#state do if (mem4!=0) mem4 0 ELSE mem4 1 endif endon
on RfReceived#Data=%mem6% do if (mem4!=0) var3=var3+1 endif endon
on RfReceived#Data=%mem7% do if (mem4!=0) var3=var3+1 endif endon
on RfReceived#Data=%mem8% do if (mem4!=0) var3=var3+1 endif endon
on RfReceived#Data=%mem9% do if (mem4!=0) var3=var3+1 endif endon
on RfReceived#Data=%mem10% do if (mem4!=0) var3=var3+1 endif endon
on RfReceived#Data=%mem11% do if (mem4!=0) var3=var3+1 endif endon
on RfReceived#Data=%mem12% do if (mem4!=0) var3=var3+1 endif endon
on RfReceived#Data=%mem13% do if (mem4!=0) var3=var3+1 endif endon
on RfReceived#Data=%mem14% do if (mem4!=0) var3=var3+1 endif endon
on Mem5#State do  RuleTimer1 1 endon
on Mem4#State do  if (mem4==0) RuleTimer2 1 endif endon 
on Mem4#State do  if (mem4==0) var1 0 endif endon 
on Mem5#State do Buzzer 3,1 endon;RfProtocol 1;Sleep 0;Rule1 1;mem1 1'''
    Rul2 = '''Rule2 
on Var3#State do RuleTimer3 2 endon
on Var3#State do if(var4==0) mem5=mem5+1 endif endon
on Var3#State do var4=1 endon
on Rules#Timer=3 do var4=0 endon
on Rules#Timer=1 do if ((mem4!=0) AND (mem15>1)) RuleTimer1 3 endif endon
on Rules#Timer=1 do if ((mem4!=0) AND (mem15>1)) RfSend %mem15% endif endon
on Rules#Timer=2 do if ((var1<=10) AND (mem15>1)) RuleTimer2 1 endif endon
on Rules#Timer=2 do var2=mem15+1 endon
on Rules#Timer=2 do if ((mem4==0) AND (mem15>1)) RfSend %var2% endif endon
on Rules#Timer=2 do var1=var1+1 endon
on Mqtt#Connected do ntpserver1 time-a.nist.gov endon
on Mqtt#Connected do ntpserver2 server3.ir.pool.ntp.org endon
on Mqtt#Connected do ntpserver3 server1.asia.pool.ntp.org endon
on Mqtt#Disconnected do ntpserver1 0 endon 
on Mqtt#Disconnected do ntpserver2 0 endon 
on Mqtt#Disconnected do ntpserver3 0 endon ;mem2 1;Rule2 1;Restart 1'''

*******************************************************************
*******************************************************************